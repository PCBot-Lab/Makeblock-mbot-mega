// generated by mBlock5 for MegaPi
// codes make you happy

#include <Arduino.h>
#include <Wire.h>
#include <SoftwareSerial.h>
#include "src/MeSingleLineFollower.h"
#include "src/MeCollisionSensor.h"
#include "src/MeBarrierSensor.h"
#include "src/MeNewRGBLed.h"
#include <MeMegaPi.h>
#include <MePS2.h>

double angle_rad = PI/180.0;
double angle_deg = 180.0/PI;
MeMegaPiDCMotor motor_1(1);
MeMegaPiDCMotor motor_9(9);
MeMegaPiDCMotor motor_2(2);
MeMegaPiDCMotor motor_10(10);
MeMegaPiDCMotor motor_3(3);
MeMegaPiDCMotor motor_11(11);
MeMegaPiDCMotor motor_4(4);
MeMegaPiDCMotor motor_12(12);

float distance = 0;
float tilt_angle = 0;
float pan_angle = 0;
float speed = 0;

MePS2 MePS2(PORT_15);
void Forward(){

  motor_1.run(speed / 100.0 * 255);
  motor_9.run(speed / 100.0 * 255);

  motor_10.run((0 - speed) / 100.0 * 255);
  motor_2.run((0 - speed) / 100.0 * 255);

}
void Backward(){

  motor_1.run((0 - speed) / 100.0 * 255);
  motor_9.run((0 - speed) / 100.0 * 255);

  motor_10.run(speed / 100.0 * 255);
  motor_2.run(speed / 100.0 * 255);

}
void Right_turn(){

  motor_1.run(0 / 100.0 * 255);
  motor_9.run(0 / 100.0 * 255);

  motor_10.run((0 - speed) / 100.0 * 255);
  motor_2.run((0 - speed) / 100.0 * 255);

}
void Left_turn(){

  motor_1.run(speed / 100.0 * 255);
  motor_9.run(speed / 100.0 * 255);

  motor_10.run(0 / 100.0 * 255);
  motor_2.run(0 / 100.0 * 255);

}
void Right_Rotation(){

  motor_1.run((0 - speed) / 100.0 * 255);
  motor_9.run((0 - speed) / 100.0 * 255);

  motor_10.run((0 - speed) / 100.0 * 255);
  motor_2.run((0 - speed) / 100.0 * 255);

}
void Left_Rotation(){

  motor_1.run(speed / 100.0 * 255);
  motor_9.run(speed / 100.0 * 255);

  motor_10.run(speed / 100.0 * 255);
  motor_2.run(speed / 100.0 * 255);

}
void Right_direction(){

  motor_1.run((0 - speed) / 100.0 * 255);
  motor_10.run((0 - speed) / 100.0 * 255);

  motor_2.run(speed / 100.0 * 255);
  motor_9.run(speed / 100.0 * 255);

}
void Left_direction(){

  motor_1.run(speed / 100.0 * 255);
  motor_10.run(speed / 100.0 * 255);

  motor_2.run((0 - speed) / 100.0 * 255);
  motor_9.run((0 - speed) / 100.0 * 255);

}
void Forward_right_direction(){

  motor_1.run(0 / 100.0 * 255);
  motor_2.run(0 / 100.0 * 255);

  motor_10.run((0 - speed) / 100.0 * 255);

  motor_9.run(speed / 100.0 * 255);

}
void Forward_left_direction(){

  motor_9.run(0 / 100.0 * 255);
  motor_10.run(0 / 100.0 * 255);

  motor_2.run((0 - speed) / 100.0 * 255);

  motor_1.run(speed / 100.0 * 255);

}
void Backward_right_direction(){

  motor_9.run(0 / 100.0 * 255);
  motor_10.run(0 / 100.0 * 255);

  motor_2.run(speed / 100.0 * 255);

  motor_1.run((0 - speed) / 100.0 * 255);

}
void Backward_left_direction(){

  motor_1.run(0 / 100.0 * 255);
  motor_2.run(0 / 100.0 * 255);

  motor_10.run(speed / 100.0 * 255);

  motor_9.run((0 - speed) / 100.0 * 255);

}

void _delay(float seconds) {
  if(seconds < 0.0){
    seconds = 0.0;
  }
  long endTime = millis() + seconds * 1000;
  while(millis() < endTime) _loop();
}

void setup() {
  TCCR1A = _BV(WGM10);
  TCCR1B = _BV(CS11) | _BV(WGM12);
  TCCR2A = _BV(WGM21) | _BV(WGM20);
  TCCR2B = _BV(CS21);
  MePS2.begin(115200);
  speed = 30;

}

void _loop() {
  MePS2.loop();
}

void loop() {
  if(MePS2.ButtonPressed(12)){
    Forward();

  }
  if(MePS2.ButtonPressed(10)){
    Backward();

  }
  if(MePS2.ButtonPressed(14)){
    Forward();

  }
  if(MePS2.ButtonPressed(15)){
    Backward();

  }
  if(MePS2.ButtonPressed(9)){
    Left_turn();

  }
  if(MePS2.ButtonPressed(11)){
    Right_turn();

  }
  if(MePS2.ButtonPressed(16)){
    Left_Rotation();

  }
  if(MePS2.ButtonPressed(17)){
    Right_Rotation();

  }
  if(MePS2.ButtonPressed(5)){
    Left_direction();

  }
  if(MePS2.ButtonPressed(1)){
    Right_direction();

  }
  if(MePS2.ButtonPressed(7)){
    Forward_left_direction();

  }
  if(MePS2.ButtonPressed(3)){
    Forward_right_direction();

  }
  if(MePS2.ButtonPressed(20)){
    Backward_left_direction();

  }
  if(MePS2.ButtonPressed(21)){
    Backward_right_direction();

  }
  if(MePS2.ButtonPressed(18)){

    motor_1.run(0);
    motor_9.run(0);
    motor_2.run(0);
    motor_10.run(0);
    motor_3.run(0);
    motor_11.run(0);
    motor_4.run(0);
    motor_12.run(0);

  }
  if(MePS2.ButtonPressed(13)){

    motor_1.run(0);
    motor_9.run(0);
    motor_2.run(0);
    motor_10.run(0);
    motor_3.run(0);
    motor_11.run(0);
    motor_4.run(0);
    motor_12.run(0);

  }

  _loop();
}